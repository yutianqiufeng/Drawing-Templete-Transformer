# -*- coding: utf-8 -*-
import os

# Form implementation generated from reading ui file 'template_transformer.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import sip
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import pyqtSignal
from PyQt5.QtGui import QFont, QPixmap, QIcon

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(939, 724)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        icon = QIcon('transformer.ico')  # 使用.ico格式的图标文件
        self.setWindowIcon(icon)
        self.pushButton_ok = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_ok.setGeometry(QtCore.QRect(610, 590, 93, 28))
        self.pushButton_ok.setObjectName("pushButton_ok")
        self.pushButton_extract = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_extract.setGeometry(QtCore.QRect(270, 590, 93, 28))
        self.pushButton_extract.setObjectName("pushButton_extract")
        self.pushButton_view = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_view.setGeometry(QtCore.QRect(150, 590, 93, 28))
        self.pushButton_view.setObjectName("pushButton_view")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(100, 100, 331, 481))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_upload = QtWidgets.QPushButton(self.verticalLayoutWidget)
        self.label_upload.setObjectName("label_upload")
        # self.label_upload.setStyleSheet("QPushButton { background-color: none; border: none; }")  # 移除按钮样式
        self.verticalLayout.addWidget(self.label_upload)
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(490, 100, 331, 481))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_name = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_name.setObjectName("label_name")
        self.gridLayout.addWidget(self.label_name, 4, 0, 1, 1)
        self.lineEdit_scale = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_scale.setObjectName("lineEdit_scale")
        self.gridLayout.addWidget(self.lineEdit_scale, 7, 2, 1, 1)
        self.lineEdit_dwn = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_dwn.setObjectName("lineEdit_dwn")
        self.gridLayout.addWidget(self.lineEdit_dwn, 1, 2, 1, 1)
        self.label_pev = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_pev.setObjectName("label_Rev")
        self.gridLayout.addWidget(self.label_pev, 8, 0, 1, 1)
        self.lineEdit_material = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_material.setObjectName("lineEdit_material")
        self.gridLayout.addWidget(self.lineEdit_material, 5, 2, 1, 1)
        self.label_material = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_material.setObjectName("label_material")
        self.gridLayout.addWidget(self.label_material, 5, 0, 1, 1)
        self.label_1 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_1.setObjectName("label_1")
        self.gridLayout.addWidget(self.label_1, 10, 0, 1, 1)
        self.label_chk = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_chk.setObjectName("label_chk")
        self.gridLayout.addWidget(self.label_chk, 2, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 11, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 12, 0, 1, 1)
        self.label_date = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_date.setObjectName("label_date")
        self.gridLayout.addWidget(self.label_date, 9, 0, 1, 1)
        self.label_dwn = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_dwn.setObjectName("label_dwn")
        self.gridLayout.addWidget(self.label_dwn, 1, 0, 1, 1)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.gridLayout.addWidget(self.lineEdit_3, 12, 2, 1, 1)
        self.label_apvd = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_apvd.setObjectName("label_apvd")
        self.gridLayout.addWidget(self.label_apvd, 3, 0, 1, 1)
        self.label_scale = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_scale.setObjectName("label_scale")
        self.gridLayout.addWidget(self.label_scale, 7, 0, 1, 1)
        self.lineEdit_1 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_1.setObjectName("lineEdit_1")
        self.gridLayout.addWidget(self.lineEdit_1, 10, 2, 1, 1)
        self.lineEdit_date = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_date.setObjectName("lineEdit_date")
        self.gridLayout.addWidget(self.lineEdit_date, 9, 2, 1, 1)
        self.lineEdit_name = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_name.setObjectName("lineEdit_name")
        self.gridLayout.addWidget(self.lineEdit_name, 4, 2, 1, 1)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.gridLayout.addWidget(self.lineEdit_2, 11, 2, 1, 1)
        self.lineEdit_apvd = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_apvd.setObjectName("lineEdit_apvd")
        self.gridLayout.addWidget(self.lineEdit_apvd, 3, 2, 1, 1)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.gridLayout.addWidget(self.lineEdit_4, 13, 2, 1, 1)
        self.label_4 = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_4.setObjectName("label_4")
        self.gridLayout.addWidget(self.label_4, 13, 0, 1, 1)
        self.lineEdit_heatTreat = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_heatTreat.setObjectName("lineEdit_heatTreat")
        self.gridLayout.addWidget(self.lineEdit_heatTreat, 6, 2, 1, 1)
        self.lineEdit_pev = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_pev.setObjectName("lineEdit_pev")
        self.gridLayout.addWidget(self.lineEdit_pev, 8, 2, 1, 1)
        self.label_heatTreat = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_heatTreat.setObjectName("label_heatTreat")
        self.gridLayout.addWidget(self.label_heatTreat, 6, 0, 1, 1)
        self.lineEdit_no = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_no.setObjectName("lineEdit_no")
        self.gridLayout.addWidget(self.lineEdit_no, 0, 2, 1, 1)
        self.lineEdit_chk = QtWidgets.QLineEdit(self.verticalLayoutWidget_2)
        self.lineEdit_chk.setObjectName("lineEdit_chk")
        self.gridLayout.addWidget(self.lineEdit_chk, 2, 2, 1, 1)
        self.label_no = QtWidgets.QLabel(self.verticalLayoutWidget_2)
        self.label_no.setObjectName("label_no")
        self.gridLayout.addWidget(self.label_no, 0, 0, 1, 1)
        self.verticalLayout_2.addLayout(self.gridLayout)


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 939, 26))
        self.menubar.setObjectName("menubar")
        self.file = QtWidgets.QMenu(self.menubar)
        self.file.setObjectName("file")
        self.settings = QtWidgets.QMenu(self.menubar)
        self.settings.setObjectName("settings")
        self.help = QtWidgets.QMenu(self.menubar)
        self.help.setObjectName("help")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        # self.actionupload = QtWidgets.QAction(MainWindow)
        # self.actionupload.setObjectName("actionupload")
        self.actionaddress = QtWidgets.QAction(MainWindow)
        self.actionaddress.setObjectName("actionaddress")
        self.about = QtWidgets.QAction(MainWindow)
        self.about.setObjectName("about")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        # self.file.addAction(self.actionupload)
        # self.file.addSeparator()
        self.file.addAction(self.actionClose)
        self.settings.addAction(self.actionaddress)
        self.help.addAction(self.about)
        self.menubar.addAction(self.file.menuAction())
        self.menubar.addAction(self.settings.menuAction())
        self.menubar.addAction(self.help.menuAction())

        # 添加用于显示预览的图片标签
        self.label_preview = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_preview.setScaledContents(True)  # 设置标签以缩放内容填充自身
        self.verticalLayout.addWidget(self.label_preview)

        # 编辑框里的默认值（几个名字）
        # self.lineEdit_dwn.setText("(Input From System)")
        # self.lineEdit_chk.setText("(Input From System)")
        # self.lineEdit_apvd.setText("(Input From System)")

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Template transfomer"))
        self.pushButton_ok.setText(_translate("MainWindow", "Finish"))
        self.pushButton_extract.setText(_translate("MainWindow", "Extract"))
        self.pushButton_view.setText(_translate("MainWindow", "Preview"))
        self.label_upload.setText(_translate("MainWindow", "Upload"))
        self.label_name.setText(_translate("MainWindow", "NAME"))
        self.label_pev.setText(_translate("MainWindow", "REV"))
        self.label_material.setText(_translate("MainWindow", "MATERIAL"))
        self.label_1.setText(_translate("MainWindow", "TOL1"))
        self.label_chk.setText(_translate("MainWindow", "CHK"))
        self.label_2.setText(_translate("MainWindow", "TOL2"))
        self.label_3.setText(_translate("MainWindow", "TOL3"))
        self.label_date.setText(_translate("MainWindow", "DATE"))
        self.label_dwn.setText(_translate("MainWindow", "DWN"))
        self.label_apvd.setText(_translate("MainWindow", "APVD"))
        self.label_scale.setText(_translate("MainWindow", "SCALE"))
        self.label_4.setText(_translate("MainWindow", "TOL4"))
        self.label_heatTreat.setText(_translate("MainWindow", "HEAT TREAT"))
        self.label_no.setText(_translate("MainWindow", "Drawing NO"))
        # self.label.setText(_translate("MainWindow", "模板转换器"))
        self.file.setTitle(_translate("MainWindow", "File"))
        self.settings.setTitle(_translate("MainWindow", "Setting"))
        self.help.setTitle(_translate("MainWindow", "Help"))
        # self.actionupload.setText(_translate("MainWindow", "批量上传"))
        self.actionaddress.setText(_translate("MainWindow", "Set output path"))
        self.about.setText(_translate("MainWindow", "About"))
        self.actionClose.setText(_translate("MainWindow", "Close"))

'''
弹出预览图片界面
'''
class ImageViewer(QtWidgets.QDialog):
    def __init__(self, preview_image):
        super().__init__()
        self.setWindowTitle("图片查看器")
        self.setFixedSize(1400, 900)  # 设置窗口固定大小
        self.angle = 0
        self.label = QtWidgets.QLabel()
        self.label.setScaledContents(True)

        # 加载图片并设置到标签上
        pixmap = QPixmap(preview_image)
        self.pixmap = pixmap
        self.label.setPixmap(self.pixmap)


        # 创建旋转按钮
        self.rotate_left_button = QtWidgets.QPushButton("向左旋转")
        self.rotate_right_button = QtWidgets.QPushButton("向右旋转")

        # 连接按钮信号到槽函数
        self.rotate_left_button.clicked.connect(self.rotate_left)
        self.rotate_right_button.clicked.connect(self.rotate_right)


        # 布局
        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(self.label)
        h_layout = QtWidgets.QHBoxLayout()
        h_layout.addWidget(self.rotate_left_button)
        h_layout.addWidget(self.rotate_right_button)
        layout.addLayout(h_layout)
        self.setLayout(layout)


    def rotate_left(self):
        # 向左旋转图片
        self.angle -= 90
        transform = QtGui.QTransform().rotate(self.angle)
        rotated_pixmap = self.pixmap.transformed(transform)
        self.label.setPixmap(rotated_pixmap)

    def rotate_right(self):
        # 向右旋转图片
        self.angle += 90
        transform = QtGui.QTransform().rotate(self.angle)
        rotated_pixmap = self.pixmap.transformed(transform)
        self.label.setPixmap(rotated_pixmap)



'''
未上传图片时弹出提示
'''
class Toast(QtWidgets.QWidget):
    def __init__(self, message, parent=None):
        super().__init__(parent)
        self.message = message
        self.initUI()

    def initUI(self):
        self.label = QtWidgets.QLabel(self.message)
        self.label.setAlignment(QtCore.Qt.AlignCenter)

        layout = QtWidgets.QVBoxLayout()
        layout.addWidget(self.label)
        self.setLayout(layout)

        self.setWindowFlags(QtCore.Qt.FramelessWindowHint | QtCore.Qt.WindowStaysOnTopHint)  # 无边框，置顶显示
        self.setStyleSheet("background-color: rgba(0, 0, 0, 150); color: white; border-radius: 5px; padding: 10px;")
        self.adjustSize()

        self.animation = QtCore.QPropertyAnimation(self, b"windowOpacity")
        self.animation.finished.connect(self.close)
        self.animation.setDuration(1500)
        self.animation.setStartValue(1)
        self.animation.setEndValue(0)

    def showEvent(self, event):
        self.animation.start()

'''
弹出提示手动选择模板
'''

class selectModel(QtWidgets.QDialog):
    # 定义一个信号，用于发射选择的模板路径
    modelSelected = pyqtSignal(str)

    def __init__(self,size):
        super().__init__()
        self.setWindowTitle("Select Model File")
        self.setFixedSize(220, 150)  # 设置窗口固定大小


        self.size=size
        self.another=' '
        if size=='a3':
            self.another='a4'
        else:
            self.another = 'a3'

        # 创建标签，显示选择对应的模板
        label = QtWidgets.QLabel(f"The size of drawing is {self.size}.", self)
        label.setAlignment(QtCore.Qt.AlignCenter)
        label.setGeometry(0, 30, 220, 40)

        # 创建确认按钮
        confirm_button_a3 = QtWidgets.QPushButton("Correct", self)
        confirm_button_a3.setGeometry(30, 90, 70, 30)
        confirm_button_a3.clicked.connect(self.setA3Path)

        # 创建查看按钮
        confirm_button_a4 = QtWidgets.QPushButton(self.another, self)
        confirm_button_a4.setGeometry(110, 90, 60, 30)
        confirm_button_a4.clicked.connect(self.setA4Path)


    def setA3Path(self):
        # 发射模板路径信号
        self.modelSelected.emit(self.size)
        self.accept()  # 关闭对话框

    def setA4Path(self):
        # 发射模板路径信号
        self.modelSelected.emit(self.another)
        self.accept()  # 关闭对话框


'''
弹出提示转换结果界面，窗口正中间显示转换成功！下面两个按钮左边是确认，右边是查看
'''

class convert_result(QtWidgets.QDialog):
    def __init__(self, result, outPath):
        super().__init__()
        self.setWindowTitle("Success")
        self.setFixedSize(200, 150)  # 设置窗口固定大小
        self.setModal(False)

        # 创建标签，显示转换成功的消息
        label = QtWidgets.QLabel(result, self)
        label.setAlignment(QtCore.Qt.AlignCenter)
        label.setGeometry(0, 30, 200, 40)

        # 创建确认按钮
        confirm_button = QtWidgets.QPushButton("OK", self)
        confirm_button.setGeometry(30, 90, 60, 30)
        confirm_button.clicked.connect(self.accept)  # 关联按钮的 clicked 信号与 accept 槽函数

        # 创建查看按钮
        view_button = QtWidgets.QPushButton("View", self)
        view_button.setGeometry(110, 90, 60, 30)
        view_button.clicked.connect(lambda: self.view_result(outPath))  # 关联按钮的 clicked 信号与自定义的槽函数 view_result

    def view_result(self, folder_path):
        documents_folder = os.path.expanduser("./")
        if folder_path==documents_folder:
            os.startfile(documents_folder)  # 使用系统默认程序打开默认文件夹
        elif os.path.exists(folder_path):  # 检查文件夹路径是否存在
            os.startfile(folder_path)  # 使用系统默认程序打开文件夹
        else:
            print("Path not existed:", folder_path)

'''
 关于我们
'''
class AboutDialog(QtWidgets.QDialog):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.setWindowTitle("关于我们")
        self.setFixedSize(400, 300)  # 设置窗口固定大小

        layout = QtWidgets.QVBoxLayout()

        # 添加软件名称
        software_name_label = QtWidgets.QLabel("软件名称：模板转换器")
        layout.addWidget(software_name_label)

        # 添加版本信息
        version_label = QtWidgets.QLabel("版本：1.0")
        layout.addWidget(version_label)

        # 添加联系方式
        contact_label = QtWidgets.QLabel("联系方式：xxx@xxx.com")
        layout.addWidget(contact_label)

        # 添加 Logo
        logo_label = QtWidgets.QLabel()
        pixmap = QtGui.QPixmap("")  # 替换为 Logo 文件路径
        logo_label.setPixmap(pixmap)
        layout.addWidget(logo_label)

        self.setLayout(layout)